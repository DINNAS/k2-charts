apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    component: "{{.Release.Name}}-{{.Values.Jenkins.Persistence.Name}}"
  annotations:
    "helm.sh/created": {{.Release.Time.Seconds | quote }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: "{{.Release.Name}}-{{.Values.Jenkins.Persistence.Component}}"
  template:
    metadata:
      labels:
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: "{{.Chart.Name}}-{{.Chart.Version}}"
        component: "{{.Release.Name}}-{{.Values.Jenkins.Persistence.Component}}"
      annotations:
        pod.alpha.kubernetes.io/init-containers: '[
              {
                  "name": "copy-default-config",
                  "image": "{{.Values.Jenkins.Persistence.Image}}:{{.Values.Jenkins.Persistence.ImageTag}}",
                  "command": ["cp", "-n", "/var/jenkins_config/config.xml", "/var/jenkins_home"],
                  "volumeMounts": [
                      {
                          "name": "jenkins-config",
                          "mountPath": "/var/jenkins_config"
                      },
                      {
                          "name": "jenkins-home",
                          "mountPath": "/var/jenkins_home"
                      }
                  ]
              }
          ]'
    spec:
      securityContext:
        runAsUser: 0
      containers:
        - name: {{ template "fullname" . }}
          image: "{{.Values.Jenkins.Persistence.Image}}:{{.Values.Jenkins.Persistence.ImageTag}}"
          imagePullPolicy: "{{.Values.Jenkins.Persistence.ImagePullPolicy}}"
          args: [ "--argumentsRealm.passwd.$(ADMIN_USER)=$(ADMIN_PASSWORD)",  "--argumentsRealm.roles.$(ADMIN_USER)=admin"]
          ports:
            - containerPort: {{.Values.Jenkins.Master.ContainerPort}}
              name: http
            - containerPort: {{.Values.Jenkins.Master.SlaveListenerPort}}
              name: slavelistener
          initialDelaySeconds: 30
          timeoutSeconds: 5
          resources:
            requests:
              cpu: "{{.Values.Jenkins.Persistence.Cpu}}"
              memory: "{{.Values.Jenkins.Persistence.Memory}}"
          volumeMounts:
            -
              mountPath: /var/jenkins_home
              name: jenkins-home
              readOnly: false
            -
              mountPath: /var/jenkins_config
              name: jenkins-config
              readOnly: true
      volumes:
      - name: jenkins-config
        configMap:
          name: {{ template "fullname" . }}
      - name: jenkins-home
      {{- if .Values.Jenkins.Persistence.Enabled }}
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}
      {{- else }}
        emptyDir: {}
      {{- end -}}
      